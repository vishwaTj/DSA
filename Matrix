                              Matrix questions




1) Learning to traverse inside a 3x3 block in 9x9 matrix
Q) Sudoku puzzle question -- https://leetcode.com/problems/valid-sudoku/description/
sol:- 
1) check the rows from 0-9
2) checck the cols from 0-9
3) check the sub block 3x3 

code: 
var isValidSudoku = function(board) {
   for(let i=0; i<9; i++){
       let row = new Set(),
           col = new Set(),
           box = new Set();

       for(let j=0; j<9; j++){
           let _row = board[i][j];
           let _col = board[j][i];
           let _box = board[3 * Math.floor(i/3) + Math.floor(j/3)][3 * (i%3) + (j%3)];

           if(_row != '.'){
               if(row.has(_row)) return false;
             row.add(_row);  
           }
           if(_col != '.'){
               if(col.has(_col)) return false;
             col.add(_col);  
           }
           if(_box != '.'){
               if(box.has(_box)) return false;
             box.add(_box);  
           }
       }
   }
   return true;

};


2) Spiral traversing matrix  -- https://leetcode.com/problems/spiral-matrix/description/

<img src="https://assets.leetcode.com/uploads/2020/11/13/spiral1.jpg" alt="image spiral" >

sol: just keep writing code linke you are forming a ring
    i) declare a while loop with count less than area, area = xlength * ylength
    ii) declare vars x , y , xlen, ylen, count and area and matrix to store the spiral pattern
    ii) declare 4 for loops inside it
    iii) start traversing in a spiral and write all 4 for loops
    iii) increase y for first loop to move one step down/
    iv) increase x for second loop to register an inner ring to be traversed
    iv) you will easy understand the stopping condition of above loop is start condtion
        of next loop with small tweek

code: - 
var spiralOrder = function(matrix) {
    let xlen = matrix[0].length, ylen = matrix.length;
    let x = 0, y = 0, count = 0, area = xlen * ylen, collect=[];

    while(count<area){
        for(let i=x; count<area && i < xlen - x; i++){
             collect.push(matrix[y][i]);
             count++;
        }
        y++;
        for(let i=y; count<area && i<(ylen-y)+1;i++){
            collect.push(matrix[i][(xlen-1)-x]);
            count++;
        }
        x++;

        for(let i = (xlen - 1) - x ; count<area && i>=x-1; i--){
           collect.push(matrix[(ylen-1)-(y-1)][i]);
           count++;
        }

        for(let i = (ylen - 1) - y; count<area && i>=y ; i--){
            collect.push(matrix[i][x-1]);
            count++;
        }
    } 
    return collect;
};


3) Rotate a matrix -- https://leetcode.com/problems/rotate-image/description/?envType=study-plan-v2&envId=top-interview-150
sol:-
  i) Take transpose of a matrix
      a) for(i-length)
          for(j=0; j<i)
            swap [i][j] and [j][i]
  ii) reverse each row of the matrix

code:- 
var rotate = function(matrix) {

    // Transposing a matrix
    for(let i=0;i<matrix.length;i++){
        for(let j=0;j<i;j++){
            let el = matrix[i][j];
            matrix[i][j] = matrix[j][i];
            matrix[j][i] = el;
        }
    }

    // reverse each row in matrix
    for(let i=0;i<matrix.length;i++){
        matrix[i].reverse();
    }

    return matrix;
};
