
                                         Arrays problems


1. Set Matrix Zeroes
    Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's?
    
Ans: 

class Solution {
    public void setZeroes(int[][] matrix) {
        int n=matrix.length;
        int m=matrix[0].length;
        int[] row = new int[n];
        int[] col = new int[m];
        Arrays.fill(row,-1);
        Arrays.fill(col,-1);
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(matrix[i][j] == 0){
                    row[i] = 0;
                    col[j] = 0;
                }
            }
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(row[i]==0 || col[j]==0){
                    matrix[i][j]=0;
                }
            }
        }
        
    }
}

2. next permutaion of arrays

Ans: Simple Algo
a) come from behind
b) find the non increasing elemnt i
c) go from behind again and find the elemnt the first elemnt k bigger than i
d) swap them
e) then sort the lements after index i and join it ot original array


var nextPermutation = function(nums) {

  // first find the unique element
  let elmntIdx=0,i;
  for(i=nums.length-2;i>=0;i--){
      if(nums[i]<nums[i+1]){
          elmntIdx=i;
          break;
      }
  }
  if(i<0){
      nums.reverse();
  }else{
  let swapIdx=0;
  //find the first biggest of unique element from right
  for(let j=nums.length-1;j>=0;j--){
      if(nums[j]>nums[elmntIdx]){
            swapIdx=j;
            break;
      }
 }
 
 
 2) The sorting  of 0, 1, 2 in an array without sort?
Ans) Simple use low, mid and high. Traverse with mid 
 i) while(mid<=high)
 ii) if mid === 0 increment both mid and low and swap
 iii) if mid === 1 increment only mid
 iv) if mid === 2 decrease high and swap

function swap(arr,low,mid){
   let el=arr[mid];
   arr[mid]=arr[low];
   arr[low]=el;
} 
var sortColors = function(nums) {
    let lo=mid=0,hi=nums.length-1;

    while(mid<=hi){
        if(nums[mid]===0){
           swap(nums,lo,mid);
           mid+=1;
           lo+=1;
        }
        else if(nums[mid]===1){
            mid+=1;
        }
        else{
            swap(nums,mid,hi);
            hi-=1;
        }
    }  

};




 
